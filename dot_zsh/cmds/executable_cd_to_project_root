#! /bin/bash

# Get top level repository path
get_project_root() {
	git rev-parse --show-toplevel 2>/dev/null
}
search_parent_dir() {
	# List to hold paths of repos
	list=()

	while [[ "$(pwd)" != "$(readlink -f ..)" ]]; do
		# Get top level dir
		project_root="$(get_project_root)"

		if [[ "$project_root" == "" ]]; then
			# CD to parent dir
			cd .. || return
			continue
		fi

		# Save top level dir
		list+=("$project_root")
	done

	# No project root found
	if [ ${#list[@]} -eq 0 ]; then
		echo -e "\e[37m;No project root found:\e[0m; $(pwd)"
		return 1
	# Only on project root found
	elif [ ${#list[@]} -eq 1 ]; then
		echo "${list[0]}"
	else
		# Multiple project roots found
		echo "${list[@]}"
	fi
}
cd_to_project_root() {
	# Save starting path
	cur_dir="$(pwd)"

	# Search for top level path
	project_roots=$(read -r -d '' -a project_roots <<<"$search_parent_dir")

	# CD to original path
	cd "$cur_dir" || return

	local selected_project_root
	if [[ ${#project_roots[@]} -eq 1 ]]; then
		selected_project_root="${project_roots[0]}"
	else
		# Show project_roots of possible top level paths
		# with indentation in respect to nested structure (indentation=2spaces)
		# Nearest top level path has the highest priority (1. nearest top level path 2... 3...)
		echo "Multiple project roots found:"
		for i in "${!project_roots[@]}"; do
			printf "%s. %s\n" "$((i + 1))" "${project_roots[$i]}"
		done
		# Wait for user input(1-n: [user input])
		read -rp "Choose a project root (1-${#project_roots[@]}): " selected_project_root
	fi

	# Go to project root
	cd "$selected_project_root" || return 1

	# Show the previous and current directory with colorization
	new_dir="$selected_project_root"
	echo -e "previous: \e[90m$cur_dir\e[0m\n current: \e[32m$new_dir\e[0m"

	# Exit with 0
	return 0
}
print_project_root() {
	project_roots=$(read -a -d '' -r project_roots <<<"$search_parent_dir")

	for i in "${!project_roots[@]}"; do
		echo -e "project_root: \e[32m${project_roots[$i]}\e[0m"
	done
}
# cd to project root function
alias cdr='cd_to_project_root'
# print project root function
alias ppr='print_project_root'
