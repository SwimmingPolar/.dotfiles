# If you come from bash you might have to change your $PATH.
export PATH="$HOME/.zsh/scripts:/usr/local/go/bin:$HOME/.local/bin:$HOME/bin:/usr/local/bin:$HOME/.cargo/bin:$PATH"

# omz plugins configs mandatories(which should be invoked at the top of .zshrc)
zstyle :omz:plugins:ssh-agent ssh-add-args --apple-load-keychain

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi
source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust
### End of Zinit's installer chunk

#############################################
################## Prompt ###################
#############################################
# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

#############################################
################## Plugins ##################
#############################################
zinit ice depth=1; zinit light romkatv/powerlevel10k
zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions
zinit light zdharma/history-search-multi-word
zinit light zdharma/fast-syntax-highlighting
zinit snippet OMZP::git
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::copypath
zinit snippet OMZP::cp
zinit ice as"zsh-completion"
zinit snippet OMZP::docker
zinit snippet OMZP::docker-compose
zinit snippet OMZP::fzf
zinit snippet OMZP::ssh-agent
zinit snippet OMZP::z

#############################################
########### Environment variables ###########
#############################################
export EDITOR=vim
export MANPAGER="sh -c 'col -bx | bat -l man --style=full'"

#############################################
################### Extras ##################
#############################################
dirs=(
  ".zsh/cmds"
  ".zsh/keybindings"
)
old_ifs=$IFS
source_cur_dir() {
  dir="$1"
  while IFS= read -r -d '' file; do
    # This removes everything before the last / (and including the / itself)
    # Which will leave out only the filename
    file_name=${file##*/}
    # So the ignore list can be respected
    ignore=(
      "."
      ".keep"
    )
    if [[ ${ignore[*]} =~ $file_name ]]; then
      continue
    fi
    # shell LSP do not allow sourcing file from variables hence the suppression sentence
    # shellcheck disable=SC1090
    source "$file"
  done < <(find $dir -type f -print0)
}
IFS=$old_ifs
for dir in "${dirs[@]}"; do
  source_cur_dir "$HOME/$dir"
done

#############################################
################## Aliases ##################
#############################################
alias nv="nvim"
alias nvi="nvim"
alias l="eza -lh"
alias ll="eza -lha"
alias lll="ll"
alias py=python3
alias pip=pip3
alias bat="bat --paging=always --color=always"
alias escape="sed 's/\x1b\[[0-9;]*m//g'"
alias aider="aider --env-file $HOME/.aider.env --sonnet"
alias wcl="wezterm cli"
alias cd="z"
alias ltree="eza --icons=always --tree"
alias lt="ltree"
alias leetcode="nvim leetcode.nvim"
alias so="source"
alias czf="chezmoi forget"
alias cza="chezmoi add"
