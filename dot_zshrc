
# # Path to your oh-my-zsh installation.
# export ZSH="$HOME/.oh-my-zsh"
#
# # Set name of the theme to load --- if set to "random", it will
# # load a random theme each time oh-my-zsh is loaded, in which case,
# # to know which specific one was loaded, run: echo $RANDOM_THEME
# # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
#
# # Uncomment one of the following lines to change the auto-update behavior
# # zstyle ':omz:update' mode disabled  # disable automatic updates
# # zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time
#
# # Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 7
#
# # If you come from bash you might have to change your $PATH.
# export PATH="$HOME/.desktop/.script:/usr/local/go/bin:$HOME/.local/bin:$HOME/bin:/usr/local/bin:$HOME/.cargo/bin:$PATH"
#
# # Uncomment the following line if you want to change the command execution time
# # stamp shown in the history command output.
# # You can set one of the optional three formats:
# # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# # or set a custom format using the strftime function format specifications,
# # see 'man strftime' for details.
# # HIST_STAMPS="mm/dd/yyyy"
#
# # Would you like to use another custom folder than $ZSH/custom?
# # ZSH_CUSTOM=/path/to/new-custom-folder
#
# # Which plugins would you like to load?
# # Standard plugins can be found in $ZSH/plugins/
# # Custom plugins may be added to $ZSH_CUSTOM/plugins/
# # Example format: plugins=(zsh-syntax-highlighting zsh-syntax-highlighting rails git textmate ruby lighthouse)
# # Add wisely, as too many plugins slow down shell startup.
# plugins=(
# 	git
# 	fd
# 	fzf
# 	git
# 	history
# 	zsh-syntax-highlighting
# 	zsh-autosuggestions
#   zsh-autocomplete
#   tmux
# )
#
# source $ZSH/oh-my-zsh.sh
#
# # You may need to manually set your language environment
# # export LANG=en_US.UTF-16
#
# # Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi
#
# if [ -f /etc/zsh_command_not_found ]; then
#     source /etc/zsh_command_not_found
# fi
#
# #############################################
# ########### Environment variables ###########
# #############################################
# export PATH=/snap/bin:${PATH}
# export EDITOR=vim
# export MANPAGER="sh -c 'col -bx | batcat -l man --style=full'"
# export BROWSER=wslview
#
# #############################################
# ################### Extra ###################
# #############################################
# source "$HOME/.zsh/extra"
#
# #############################################
# ################## Aliases ##################
# #############################################
# alias vim=nvim
# alias l="eza -lh"
# alias ll="eza -lha"
# alias lll="ll"
# alias py=python3
# alias pip=pip3
# alias fd=fdfind
# alias find=fdfind
# alias bat="batcat --paging=always --color=always"
# alias escape="sed 's/\x1b\[[0-9;]*m//g'"
#
# #############################################
# ################ Key bindings ###############
# #############################################
# execute_last_command() {
#   zle up-history
#   zle accept-line
# }
# zle -N execute_last_command
# bindkey '@@' execute_last_command
# # CTRL+F5 to reload zshrc
# source_zshrc() {
#   source ~/.zshrc
# }
# zle -N source_zshrc
# bindkey '^[[15;5~' "source_zshrc"
# # CTRL+ALT+F5 to open zshrc file
# open_zshrc() {
#   vim ~/.zshrc
# }
# zle -N open_zshrc
# bindkey '^[[15;7~' "open_zshrc"
#
# # Set up fzf key bindings and fuzzy completion
# export RG_PREFIX="rg --column --line-number --no-heading --color=always --smart-case"
# # Default Commands
# export FZF_DEFAULT_COMMAND='fd --type file --strip-cwd-prefix --hidden --follow --glob --exclude "**/.git/*" --exclude "**/node_modules/*"'
# export FZF_DEFAULT_OPTS="\
#     --ansi \
#     --color=info:#ffb86c,prompt:#50fa7b,pointer:#ff79c6 \
#     --color=marker:#ff79c6,spinner:#ffb86c,header:#6272a4"
# # CTRL - T to toggle find files window
# export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
# export FZF_CTRL_T_OPTS="\
#     --bind 'change:reload:sleep 0.1; $RG_PREFIX {q} || true' \
#     --bind 'ctrl-f:unbind(change,ctrl-f)+change-prompt(1. fzf> )+enable-search+rebind(ctrl-r)+transform-query(echo {q} > /tmp/rg-fzf-r; cat /tmp/rg-fzf-f)' \
#     --bind 'ctrl-r:unbind(ctrl-r)+change-prompt(2. ripgrep> )+disable-search+reload($RG_PREFIX {q} || true)+rebind(change,ctrl-f)+transform-query(echo {q} > /tmp/rg-fzf-f; cat /tmp/rg-fzf-r)' \
#     --color 'hl:-1:underline,hl+:-1:underline:reverse' \
#     --prompt '1. fzf> ' \
#     --delimiter : \
#     --header '╱ CTRL-F (Fzf mode) ╱ CTRL-R (Ripgrep mode) ╱' \
#     --preview 'bat --color=always {1} --highlight-line {2}' \
#     --bind 'enter:become(vim {1} +{2})'"
# # CTRL-/ to toggle small preview window to see the full command
# # CTRL-Y to copy the command into clipboard using pbcopy
# export FZF_CTRL_R_OPTS="\
#   --preview 'echo {}' --preview-window up:3:hidden:wrap \
#   --bind 'ctrl-/:toggle-preview' \
#   --bind 'ctrl-y:execute-silent(echo -n {2..} | pbcopy)+abort' \
#   --color header:italic \
#   --header 'Press CTRL-Y to copy command into clipboard'"
# # Print tree structure in the preview window
# export FZF_ALT_C_OPTS="\
#   --preview 'tree -C {}'"
# [ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#
# ###
# ### zsh auto-suggestion configuration
# ###
# ZSH_AUTOSUGGEST_STRATEGY=(history completion)
# ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=128
#
# ###
# ### zsh auto-complete configuration
# ###
# zstyle ':autocomplete:*' min-input 3
#
# ###
# ### Github Copilot
# ###
# eval "$(gh copilot alias -- zsh)"
# alias ai="gh copilot suggest"
# alias aiwhatis="gh copilot explain"
#
# # Run keychain to load ssh keys
# eval $(keychain --eval --agents ssh id_rsa > /dev/null 2>&1)
